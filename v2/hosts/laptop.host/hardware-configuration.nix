# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
   config,
   lib,
   pkgs,
   modulesPath,
   ...
}:
{
   imports = [(modulesPath + "/installer/scan/not-detected.nix")];
   
   boot.initrd.availableKernelModules = [
      "xhci_pci"
      "ahci"
      "nvme"
      "usbhid"
      "usb_storage"
      "uas"
      "sd_mod"
      "sdhci_pci"
   ];
   boot.initrd.kernelModules = [];
   boot.kernelModules        = [ "kvm-intel" ];
   boot.extraModulePackages  = [];
   
   fileSystems."/" = {
      device = "/dev/disk/by-uuid/c6046abf-33e1-47f7-8350-9cad023dcb04";
      fsType = "ext4";
   };
   
   fileSystems."/boot" = {
      device  = "/dev/disk/by-uuid/9652-687C";
      fsType  = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
   };
   
   swapDevices = [{ device = "/dev/disk/by-uuid/16e5e078-3659-44aa-b920-7832a6aa9e1d"; }];
   
   # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
   # (the default) this is the recommended approach. When using systemd-networkd it's
   # still possible to use this option, but it's recommended to use it in conjunction
   # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
   networking.useDHCP = lib.mkDefault true;
   # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;
   # networking.interfaces.wlp8s0.useDHCP = lib.mkDefault true;
   
   nixpkgs.hostPlatform               = lib.mkDefault "x86_64-linux";
   hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
   hardware.nvidia.package            = config.boot.kernelPackages.nvidiaPackages.stable;
   services.xserver.videoDrivers      = [ "nvidia" ];
} # end-of: <module>

